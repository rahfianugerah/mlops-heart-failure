name: Automate Reproducible Models

on:
  push:
    branches: [main]
    paths:
      - 'MLProject/**'
      - 'preprocessing/**'
      - '.github/workflows/modelling.yml'
  workflow_dispatch:
    inputs:
      n_trials:
        description: 'Optuna Trials for Hyperparameter Tuning'
        required: false
        default: '30'

permissions:
  contents: write

env:
  EXP_TUNE:  mlp_tuning
  EXP_TRAIN: mlp_training
  TRACK_DIR: ../mlruns
  N_TRIALS_DEFAULT: '30'

concurrency:
  group: modelling
  cancel-in-progress: false

jobs:
  build-train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show Versions
        run: |
          python -V
          mlflow --version
          pip freeze | sed -n '1,120p'

      - name: Ensure Output Folders
        run: |
          mkdir -p artifacts models

      - name: Run Optuna Tuning (MLflow Project)
        env:
          N_TRIALS_INPUT: ${{ github.event.inputs.n_trials }}
        run: |
          N_TRIALS="${N_TRIALS_INPUT:-$N_TRIALS_DEFAULT}"
          echo "Running tuning with N_TRIALS=${N_TRIALS}"
          mlflow run MLProject \
            --env-manager=local \
            -e tune \
            -P experiment_name="${EXP_TUNE}" \
            -P tracking_dir="${TRACK_DIR}" \
            -P n_trials="${N_TRIALS}" \
            -P study_db="optuna_study_mlp.db"

      - name: Run Final Training (MLflow Project)
        run: |
          mlflow run MLProject \
            --env-manager=local \
            -e train \
            -P experiment_name="${EXP_TRAIN}" \
            -P tracking_dir="${TRACK_DIR}"

      - name: Upload Evaluation Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: |
            artifacts/**
            MLProject/best_params.json
            best_params.json
          if-no-files-found: warn
          retention-days: 7

      - name: Upload Saved Models
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-models
          path: |
            models/**
          if-no-files-found: warn
          retention-days: 7

      - name: Commit Artifacts & Models
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add artifacts/** models/** MLProject/best_params.json best_params.json || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "[AUTO] Update Artifacts & Models"
            git push
          fi